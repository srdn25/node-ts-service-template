version: '3.8'

services:
  mongo:
    image: mongo:8.0
    container_name: mongo
    ports:
      - '27017:27017'
    volumes:
      - ./src/certs/ca.key:/keys/ca.key
      - mongo_data2:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_REPLICA_SET_NAME: rs0
    command:
      [
        'mongod',
        '--replSet',
        'rs0',
        '--bind_ip_all',
        '--keyFile',
        '/keys/ca.key',
        '--dbpath',
        '/data/db',
      ]
    networks:
      - petpaw-net

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: adminpassword
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - petpaw-net

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
  #   environment:
  #     - xpack.security.enabled=false
  #     - discovery.type=single-node
  #   ports:
  #     - '9200:9200'
  #   volumes:
  #     - elastic_data:/usr/share/elasticsearch/data
  #   networks:
  #     - petpaw-net

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.17.1
  #   ports:
  #     - '5601:5601'
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - petpaw-net

volumes:
  mongo_data2:
  # elastic_data:
  minio_data:

networks:
  petpaw-net:
